' Developer Express Code Central Example:
' A general approach to highlighting specific grid cells
' 
' To change a specific grid cell color, use the solution from the Styles and
' Templates Overview (http://documentation.devexpress.com/#WPF/CustomDocument6762)
' article.
' 
' In case of a simple scenario, when you need to highlight a cell
' based on its value or some other property that is available in the current row
' object, just specify a correct binding. For example:
' </para><para><Style
' x:Key="customCellStyle"</para><para>            BasedOn="{StaticResource
' {dxgt:GridRowThemeKey ResourceKey=CellStyle}}"</para><para>
' TargetType="dxg:CellContentPresenter"></para><para>          <Setter
' Property="Background"</para><para>              Value="{Binding
' Path=RowData.Row.SomeFieldName, Converter={local:YourConverter}}"/></para><para>
' </Style></para><para>
' However, if your cells should be colored based on
' complex logic, then a simple binding won't help you. In this case, it is better
' to create an attached property and bind to this property. Then, update this
' property when it is necessary. For example, if a specific row color depends on
' other rows, handle data changes in your datasource and update your attached
' property based on these changes. This example demonstrates the main idea of how
' to implement this functionality.
' See
' also:
' 
' http://www.devexpress.com/scid=E1297
' 
' You can find sample updates and versions for different programming languages here:
' http://www.devexpress.com/example=E4181

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------


Imports Microsoft.VisualBasic
Imports System
Namespace My


	<Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(), Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")> _
	Friend NotInheritable Partial Class Settings
		Inherits System.Configuration.ApplicationSettingsBase

		Private Shared defaultInstance As Settings = (CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New Settings()), Settings))

		Public Shared ReadOnly Property [Default]() As Settings
			Get
				Return defaultInstance
			End Get
		End Property
	End Class
End Namespace
